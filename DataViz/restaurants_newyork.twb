<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.21.1217.2252                               -->
<workbook original-version='18.1' source-build='2021.4.2 (20214.21.1217.2252)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='restaurants' inline='true' name='federated.06e2ytr0wd6hng1e83h581pf4ygs' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='restaurants' name='semistructpassivestore-direct.0ujnyqq03fqliv11wnay70bhnte4'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/Armel/Desktop/Cours_ESIEA/Github/Seconde partie/Big Data' filename='restaurants.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[restaurants.json]'>
                  <map key='address' value='true' />
                  <map key='address.coord' value='true' />
                  <map key='grades' value='true' />
                  <map key='grades.Value' value='true' />
                  <map key='grades.Value.date' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='semistructpassivestore-direct.0ujnyqq03fqliv11wnay70bhnte4' name='restaurants.json' table='[restaurants.json]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='semistructpassivestore-direct.0ujnyqq03fqliv11wnay70bhnte4' name='restaurants.json' table='[restaurants.json]' type='table' />
        <cols>
          <map key='[$date]' value='[restaurants.json].[grades.Value.date.$date]' />
          <map key='[Document Index (generated)]' value='[restaurants.json].[Document Index (generated)]' />
          <map key='[borough]' value='[restaurants.json].[borough]' />
          <map key='[building]' value='[restaurants.json].[address.building]' />
          <map key='[coord Index (généré)]' value='[restaurants.json].[address.coord.Index (generated)]' />
          <map key='[coord]' value='[restaurants.json].[address.coord.Value]' />
          <map key='[cuisine]' value='[restaurants.json].[cuisine]' />
          <map key='[grade]' value='[restaurants.json].[grades.Value.grade]' />
          <map key='[grades Index (généré)]' value='[restaurants.json].[grades.Index (generated)]' />
          <map key='[name]' value='[restaurants.json].[name]' />
          <map key='[restaurant_id]' value='[restaurants.json].[restaurant_id]' />
          <map key='[score]' value='[restaurants.json].[grades.Value.score]' />
          <map key='[street]' value='[restaurants.json].[address.street]' />
          <map key='[zipcode]' value='[restaurants.json].[address.zipcode]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[restaurants.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurants.json_571326CED1A941A3BC93831A3873F28A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address.building</remote-name>
            <remote-type>130</remote-type>
            <local-name>[building]</local-name>
            <parent-name>[restaurants.json]</parent-name>
            <remote-alias>address.building</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurants.json_571326CED1A941A3BC93831A3873F28A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address.coord.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[coord Index (généré)]</local-name>
            <parent-name>[restaurants.json]</parent-name>
            <remote-alias>address.coord.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurants.json_571326CED1A941A3BC93831A3873F28A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address.coord.Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coord]</local-name>
            <parent-name>[restaurants.json]</parent-name>
            <remote-alias>address.coord.Value</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurants.json_571326CED1A941A3BC93831A3873F28A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address.street</remote-name>
            <remote-type>130</remote-type>
            <local-name>[street]</local-name>
            <parent-name>[restaurants.json]</parent-name>
            <remote-alias>address.street</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurants.json_571326CED1A941A3BC93831A3873F28A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address.zipcode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[zipcode]</local-name>
            <parent-name>[restaurants.json]</parent-name>
            <remote-alias>address.zipcode</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurants.json_571326CED1A941A3BC93831A3873F28A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>borough</remote-name>
            <remote-type>130</remote-type>
            <local-name>[borough]</local-name>
            <parent-name>[restaurants.json]</parent-name>
            <remote-alias>borough</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurants.json_571326CED1A941A3BC93831A3873F28A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cuisine</remote-name>
            <remote-type>130</remote-type>
            <local-name>[cuisine]</local-name>
            <parent-name>[restaurants.json]</parent-name>
            <remote-alias>cuisine</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurants.json_571326CED1A941A3BC93831A3873F28A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>grades.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[grades Index (généré)]</local-name>
            <parent-name>[restaurants.json]</parent-name>
            <remote-alias>grades.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurants.json_571326CED1A941A3BC93831A3873F28A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>grades.Value.date.$date</remote-name>
            <remote-type>5</remote-type>
            <local-name>[$date]</local-name>
            <parent-name>[restaurants.json]</parent-name>
            <remote-alias>grades.Value.date.$date</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurants.json_571326CED1A941A3BC93831A3873F28A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>grades.Value.grade</remote-name>
            <remote-type>130</remote-type>
            <local-name>[grade]</local-name>
            <parent-name>[restaurants.json]</parent-name>
            <remote-alias>grades.Value.grade</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurants.json_571326CED1A941A3BC93831A3873F28A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>grades.Value.score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[score]</local-name>
            <parent-name>[restaurants.json]</parent-name>
            <remote-alias>grades.Value.score</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurants.json_571326CED1A941A3BC93831A3873F28A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[restaurants.json]</parent-name>
            <remote-alias>name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurants.json_571326CED1A941A3BC93831A3873F28A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>restaurant_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[restaurant_id]</local-name>
            <parent-name>[restaurants.json]</parent-name>
            <remote-alias>restaurant_id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[restaurants.json_571326CED1A941A3BC93831A3873F28A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' is-auto-gen-lod-field='true' name='[$Date per date]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Index de document (généré)],[grades Index (généré)] : MAX([$date]) }' />
        <desc>
          <formatted-text>
            <run>Une mesure calculée qui est au niveau de détail date</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='$Date' datatype='real' name='[$date]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>grades.Value.date.$date</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Coord per coord]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Index de document (généré)],[coord Index (généré)] : MAX([coord]) }' />
        <desc>
          <formatted-text>
            <run>Une mesure calculée qui est au niveau de détail coord</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' name='[Document Index (generated)]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per coord]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Index de document (généré)] : COUNTD([coord Index (généré)]) }' />
        <desc>
          <formatted-text>
            <run>Une mesure calculée qui est au niveau de détail coord</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per grades]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Index de document (généré)] : COUNTD([grades Index (généré)]) }' />
        <desc>
          <formatted-text>
            <run>Une mesure calculée qui est au niveau de détail grades</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per restaurants.json]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Index de document (généré)])' />
        <desc>
          <formatted-text>
            <run>Une mesure calculée qui est au niveau de détail restaurants.json</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Score per grades]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Index de document (généré)],[grades Index (généré)] : MAX([score]) }' />
        <desc>
          <formatted-text>
            <run>Une mesure calculée qui est au niveau de détail grades</run>
          </formatted-text>
        </desc>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='restaurants.json' datatype='table' name='[__tableau_internal_object_id__].[restaurants.json_571326CED1A941A3BC93831A3873F28A]' role='measure' type='quantitative' />
      <column caption='Borough' datatype='string' name='[borough]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>borough</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Building' datatype='string' name='[building]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>address.building</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' name='[coord Index (généré)]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>address.coord.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Coord' datatype='real' name='[coord]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>address.coord.Value</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Cuisine' datatype='string' name='[cuisine]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>cuisine</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Grade' datatype='string' name='[grade]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>grades.Value.grade</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' name='[grades Index (généré)]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>grades.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>name</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Restaurant Id' datatype='string' name='[restaurant_id]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>restaurant_id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Score' datatype='real' name='[score]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>grades.Value.score</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Street' datatype='string' name='[street]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>address.street</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Zipcode' datatype='string' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>address.zipcode</run>
          </formatted-text>
        </desc>
      </column>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Address' role='dimensions'>
        <folder-item name='[building]' type='field' />
        <folder-item name='[street]' type='field' />
        <folder-item name='[zipcode]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Grades' role='dimensions'>
        <folder-item name='[grade]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Mesures source' role='measures'>
        <folder-item name='[$date]' type='field' />
        <folder-item name='[coord]' type='field' />
        <folder-item name='[score]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Restaurants' role='dimensions'>
        <folder-item name='[borough]' type='field' />
        <folder-item name='[cuisine]' type='field' />
        <folder-item name='[name]' type='field' />
        <folder-item name='[restaurant_id]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.true...folders-common>
        <folder name='Address'>
          <folder-item name='[building]' type='field' />
          <folder-item name='[street]' type='field' />
          <folder-item name='[zipcode]' type='field' />
        </folder>
        <folder name='Grades'>
          <folder-item name='[grade]' type='field' />
        </folder>
        <folder name='Mesures source'>
          <folder-item name='[$date]' type='field' />
          <folder-item name='[coord]' type='field' />
          <folder-item name='[score]' type='field' />
        </folder>
        <folder name='Restaurants'>
          <folder-item name='[borough]' type='field' />
          <folder-item name='[cuisine]' type='field' />
          <folder-item name='[name]' type='field' />
          <folder-item name='[restaurant_id]' type='field' />
        </folder>
      </_.fcp.SchemaViewerObjectModel.true...folders-common>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Etats-Unis&quot;' />
        <semantic-value key='[ZipCode].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='restaurants.json' id='restaurants.json_571326CED1A941A3BC93831A3873F28A'>
            <properties context=''>
              <relation connection='semistructpassivestore-direct.0ujnyqq03fqliv11wnay70bhnte4' name='restaurants.json' table='[restaurants.json]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Feuille 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='restaurants' name='federated.06e2ytr0wd6hng1e83h581pf4ygs' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.06e2ytr0wd6hng1e83h581pf4ygs'>
            <column-instance column='[zipcode]' derivation='None' name='[none:zipcode:nk]' pivot='key' type='nominal' />
            <column caption='Score' datatype='real' name='[score]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>grades.Value.score</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[score]' derivation='Sum' name='[sum:score:qk]' pivot='key' type='quantitative' />
            <column caption='Zipcode' datatype='string' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal'>
              <desc>
                <formatted-text>
                  <run>address.zipcode</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.06e2ytr0wd6hng1e83h581pf4ygs].[Longitude (generated)]' field-type='quantitative' max='-8181100.3687178129' min='-8254630.5187990088' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.06e2ytr0wd6hng1e83h581pf4ygs].[Latitude (generated)]' field-type='quantitative' max='4994782.9375611506' min='4951352.4974262007' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.06e2ytr0wd6hng1e83h581pf4ygs].[sum:score:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.06e2ytr0wd6hng1e83h581pf4ygs].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.06e2ytr0wd6hng1e83h581pf4ygs].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.06e2ytr0wd6hng1e83h581pf4ygs].[Longitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='place-village' value='true' />
            <format attr='enabled' id='place-town' value='true' />
            <format attr='enabled' id='place-islands' value='true' />
            <format attr='enabled' id='place-islands-2' value='true' />
            <format attr='enabled' id='place-city-sm' value='true' />
            <format attr='enabled' id='place-city-md-s' value='true' />
            <format attr='enabled' id='place-city-md-n' value='true' />
            <format attr='enabled' id='place-city-lg-s' value='true' />
            <format attr='enabled' id='place-city-lg-n' value='true' />
            <format attr='enabled' id='place-capital-s' value='true' />
            <format attr='enabled' id='place-capital-n' value='true' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.06e2ytr0wd6hng1e83h581pf4ygs].[sum:score:qk]' />
              <lod column='[federated.06e2ytr0wd6hng1e83h581pf4ygs].[none:zipcode:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.06e2ytr0wd6hng1e83h581pf4ygs].[Latitude (generated)]</rows>
        <cols>[federated.06e2ytr0wd6hng1e83h581pf4ygs].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{BDABC022-62E6-4C04-A937-FD6BBAE38A46}' />
    </worksheet>
    <worksheet name='Feuille 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='restaurants' name='federated.06e2ytr0wd6hng1e83h581pf4ygs' />
          </datasources>
          <datasource-dependencies datasource='federated.06e2ytr0wd6hng1e83h581pf4ygs'>
            <column caption='Borough' datatype='string' name='[borough]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>borough</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Grade' datatype='string' name='[grade]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>grades.Value.grade</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[borough]' derivation='None' name='[none:borough:nk]' pivot='key' type='nominal' />
            <column-instance column='[grade]' derivation='None' name='[none:grade:nk]' pivot='key' type='nominal' />
            <column caption='Score' datatype='real' name='[score]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>grades.Value.score</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[score]' derivation='Sum' name='[sum:score:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.06e2ytr0wd6hng1e83h581pf4ygs].[none:grade:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.06e2ytr0wd6hng1e83h581pf4ygs].[sum:score:qk]</rows>
        <cols>[federated.06e2ytr0wd6hng1e83h581pf4ygs].[none:borough:nk]</cols>
      </table>
      <simple-id uuid='{432D1B75-671D-40F9-A622-0130504FFA06}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='Feuille 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='169'>
            <card pane-specification-id='0' param='[federated.06e2ytr0wd6hng1e83h581pf4ygs].[sum:score:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06e2ytr0wd6hng1e83h581pf4ygs].[none:borough:nk]</field>
            <field>[federated.06e2ytr0wd6hng1e83h581pf4ygs].[none:building:nk]</field>
            <field>[federated.06e2ytr0wd6hng1e83h581pf4ygs].[none:cuisine:nk]</field>
            <field>[federated.06e2ytr0wd6hng1e83h581pf4ygs].[none:name:nk]</field>
            <field>[federated.06e2ytr0wd6hng1e83h581pf4ygs].[none:street:nk]</field>
            <field>[federated.06e2ytr0wd6hng1e83h581pf4ygs].[none:zipcode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BDEA0384-3C09-4E7E-9B1A-04DB22ED847E}' />
    </window>
    <window class='worksheet' name='Feuille 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='169'>
            <card pane-specification-id='0' param='[federated.06e2ytr0wd6hng1e83h581pf4ygs].[none:grade:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06e2ytr0wd6hng1e83h581pf4ygs].[none:borough:nk]</field>
            <field>[federated.06e2ytr0wd6hng1e83h581pf4ygs].[none:cuisine:nk]</field>
            <field>[federated.06e2ytr0wd6hng1e83h581pf4ygs].[none:grade:nk]</field>
            <field>[federated.06e2ytr0wd6hng1e83h581pf4ygs].[none:name:nk]</field>
            <field>[federated.06e2ytr0wd6hng1e83h581pf4ygs].[none:restaurant_id:nk]</field>
            <field>[federated.06e2ytr0wd6hng1e83h581pf4ygs].[none:zipcode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C299E4E8-CDB9-4890-8219-32F311E5DD82}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Feuille 1' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Feuille 2' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
