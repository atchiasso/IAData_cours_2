install.packages("ade4")
library(ade4)
install.packages("ade4")
knitr::opts_chunk$set(echo = TRUE)
`````{R}
knitr::opts_chunk$set(echo = TRUE)
library("ade4")
library("adegraphics")
library("vcd")
library(factoextra)
library(PCAmixdata)
library("FactoMineR")
pokemon <- read.csv("C:/Users/wgorchane/Desktop/ecole/5A/MATH/ACM/pokemon.csv")
setwd(dir = "C:/Users/Armel/Desktop/Cours ESIEA/Github/Modèles pour la Data Science")
setwd(dir = "C:/Users/Armel/Desktop/Cours ESIEA/Github/Seconde partie/Modèles pour la Data Science")
setwd(dir = "C:/Users/Armel/Desktop/Cours_ESIEA/Github/Seconde partie/Modèles pour la Data Science")
str("ozone.txt")
str(ozone.txt)
my_data <- read.delim("108292_ozone.txt")
View(my_data)
View(my_data)
str("108292_ozone.txt")
str(108292_ozone.txt)
data <- read.table("108292_ozone.txt",sep=" ",header=T)
View(data)
View(data)
data$vent <- as.factor(data$vent)
data$pluie <- as.factor(data$pluie)
corrplot(data.cor)
install.packages("corrplot")
library(corrplot)
corrplot(data.cor)
source("C:/Users/Armel/Desktop/Cours_ESIEA/Github/Seconde partie/Modèles pour la Data Science/td1.R", echo=TRUE)
setwd(dir = "C:/Users/Armel/Desktop/Cours_ESIEA/Github/Seconde partie/Modèles pour la Data Science")
data <- read.table("108292_ozone.txt",sep=" ",header=T)
data$vent <- as.factor(data$vent)
data$pluie <- as.factor(data$pluie)
corrplot(data.cor)
data.cor = cor(data, method = c("spearman"))
boxplot(data$max03v)
data
View(my_data)
View(data)
setwd(dir = "C:/Users/Armel/Desktop/Cours_ESIEA/Github/Seconde partie/Modèles pour la Data Science")
data <- read.table("108292_ozone.txt",sep=" ",header=T)
data$vent <- as.factor(data$vent)
data$pluie <- as.factor(data$pluie)
data.cor = cor(data, method = c("spearman"))
corrplot(data.cor)
setwd(dir = "C:/Users/Armel/Desktop/Cours_ESIEA/Github/Seconde partie/Modèles pour la Data Science")
data <- read.table("108292_ozone.txt",sep=" ",header=T)
data <- as.data.frame(data)
data$vent <- as.factor(data$vent)
data$pluie <- as.factor(data$pluie)
data.cor = cor(data, method = c("spearman"))
setwd(dir = "C:/Users/Armel/Desktop/Cours_ESIEA/Github/Seconde partie/Modèles pour la Data Science")
data <- read.table("108292_ozone.txt",sep=" ",header=T)
data <- as.data.frame(data)
View(data)
View(data)
data$vent <- as.factor(data$vent)
class(data$vent)
data.cor = cor(data)
setwd(dir = "C:/Users/Armel/Desktop/Cours_ESIEA/Github/Seconde partie/Modèles pour la Data Science")
data <- read.table("108292_ozone.txt",sep=" ",header=T)
data <- as.data.frame(data)
data$vent <- as.factor(data$vent)
data$pluie <- as.factor(data$pluie)
View(data)
View(data)
ozone <- data[-13,]
View(ozone)
setwd(dir = "C:/Users/Armel/Desktop/Cours_ESIEA/Github/Seconde partie/Modèles pour la Data Science")
data <- read.table("108292_ozone.txt",sep=" ",header=T)
data <- as.data.frame(data)
data$vent <- as.factor(data$vent)
data$pluie <- as.factor(data$pluie)
ozone <- data[,-13]
View(ozone)
View(ozone)
ozone <- ozone[,-12]
View(ozone)
View(ozone)
ozone.cor = cor(ozone)
corrplot(ozone.cor)
boxplot(ozone)
ozone.rcorr = rcorr(as.matrix(ozone))
install.packages("Hmisc")
library("Hmisc")
ozone.rcorr = rcorr(as.matrix(ozone))
ozone.rcorr
corrplot(ozone.cor, p.mat = testRes$p, insig = 'p-value', sig.level = -1)
corrplot(ozone.cor, type="lower")
p.mat <- cor.mtest(ozone)
View(p.mat)
p.mat
corrplot(ozone.cor, p.mat = p.mat, insig = 'p-value', sig.level = -1)
corrplot(ozone.cor, p.mat = p.mat$p, insig = 'p-value', sig.level = -1)
modelcomp <- lm(max03v~.,data=ozone)
modelcomp <- lm(ozone$max03v~.,data=ozone)
View(ozone)
modelcomp <- lm(max03v~.,data=ozone)
modelcomp <- lm(ozone$max03~.,data=ozone)
modelcomp <- lm(ozone$max03v~.,ozone)
modelcomp <- lm(ozone$max03v~,ozone)
modelcomp <- lm(ozone$max03v~., data = ozone)
setwd(dir = "C:/Users/Armel/Desktop/Cours_ESIEA/Github/Seconde partie/Modèles pour la Data Science")
data <- read.table("108292_ozone.txt",sep=" ",header=T)
data$vent <- as.factor(data$vent)
data$pluie <- as.factor(data$pluie)
# Données numériques du Dataframe
ozone <- data[,-13]
ozone <- ozone[,-12]
# Corrélation
ozone.cor = cor(ozone)
corrplot(ozone.cor, type="lower")
p.mat <- cor.mtest(ozone)
p.mat
corrplot(ozone.cor, p.mat = p.mat$p, insig = 'p-value', sig.level = -1)
boxplot(ozone)
modelcomp <- lm(ozone$max03v~., data = ozone)
modelcomp <- lm(ozone~max03v, data = ozone)
modelcomp <- lm(max03v~., data = ozone)
modelcomp <- lm(max03~., data = ozone)
ozone$maxO3
modelcomp <- lm(ozone$maxO3~., data = ozone)
summary(modelcomp)
shapiro.test(residuals(modelcomp))
boxplot(modelcomp$residuals)
# Visualisation
boxplot(modelcomp$residuals)$out
library(Outliers)
library(outliers)
install.packages("outliers")
library(outliers)
grubbs.test(ozone$max03)
grubbs.test(modelcomp$residuals)
grubbs.test(modelcomp$residuals, type=11)
grubbs.test(modelcomp$residuals, type=20)
grubbs.test(modelcomp$residuals, type=20, opposite=TRUE)
setwd(dir = "C:/Users/Armel/Desktop/Cours_ESIEA/Github/Seconde partie/Modèles pour la Data Science")
data <- read.table("108292_ozone.txt",sep=" ",header=T)
data$vent <- as.factor(data$vent)
data$pluie <- as.factor(data$pluie)
# Données numériques du Dataframe
ozone <- data[,-13]
ozone <- ozone[,-12]
# Corrélation
ozone.cor = cor(ozone)
corrplot(ozone.cor, type="lower")
p.mat <- cor.mtest(ozone)
p.mat
corrplot(ozone.cor, p.mat = p.mat$p, insig = 'p-value', sig.level = -1)
# Visualisation
boxplot(ozone)
# Ecriture du modèle
modelcomp <- lm(ozone$maxO3~., data = ozone)
summary(modelcomp)
shapiro.test(residuals(modelcomp))
# Visualisation des 4 outliers
boxplot(modelcomp$residuals)$out
# Test pour avoir la normalité // "type = 11" pour savoir si lowest/highest sont des outliers
grubbs.test(modelcomp$residuals, type=11)
grubbs.test(modelcomp$residuals, type=20, opposite=TRUE)
setwd(dir = "C:/Users/Armel/Desktop/Cours_ESIEA/Github/Seconde partie/Modèles pour la Data Science")
data <- read.table("108292_ozone.txt",sep=" ",header=T)
data$vent <- as.factor(data$vent)
data$pluie <- as.factor(data$pluie)
# Données numériques du Dataframe
ozone <- data[,-13]
ozone <- ozone[,-12]
# Corrélation
ozone.cor = cor(ozone)
corrplot(ozone.cor, type="lower")
p.mat <- cor.mtest(ozone)
p.mat
corrplot(ozone.cor, p.mat = p.mat$p, insig = 'p-value', sig.level = -1)
# Visualisation
boxplot(ozone)
# Ecriture du modèle
modelcomp <- lm(ozone$maxO3~., data = ozone)
summary(modelcomp)
shapiro.test(residuals(modelcomp))
# Visualisation des 4 outliers
boxplot(modelcomp$residuals)$out
# Test pour avoir la normalité // "type = 11" pour savoir si lowest/highest sont des outliers
#grubbs.test(modelcomp$residuals, type=11)
grubbs.test(modelcomp$residuals, type=20, opposite=TRUE)
